// This file was generated by Rcpp::compileAttributes
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <Rcpp.h>

using namespace Rcpp;

// mix
CharacterVector mix(CharacterVector x, CharacterVector dict, CharacterVector model, CharacterVector user);
RcppExport SEXP jiebaR_mix(SEXP xSEXP, SEXP dictSEXP, SEXP modelSEXP, SEXP userSEXP) {
BEGIN_RCPP
    SEXP __sexp_result;
    {
        Rcpp::RNGScope __rngScope;
        Rcpp::traits::input_parameter< CharacterVector >::type x(xSEXP );
        Rcpp::traits::input_parameter< CharacterVector >::type dict(dictSEXP );
        Rcpp::traits::input_parameter< CharacterVector >::type model(modelSEXP );
        Rcpp::traits::input_parameter< CharacterVector >::type user(userSEXP );
        CharacterVector __result = mix(x, dict, model, user);
        PROTECT(__sexp_result = Rcpp::wrap(__result));
    }
    UNPROTECT(1);
    return __sexp_result;
END_RCPP
}
// hmm
CharacterVector hmm(CharacterVector x, CharacterVector model);
RcppExport SEXP jiebaR_hmm(SEXP xSEXP, SEXP modelSEXP) {
BEGIN_RCPP
    SEXP __sexp_result;
    {
        Rcpp::RNGScope __rngScope;
        Rcpp::traits::input_parameter< CharacterVector >::type x(xSEXP );
        Rcpp::traits::input_parameter< CharacterVector >::type model(modelSEXP );
        CharacterVector __result = hmm(x, model);
        PROTECT(__sexp_result = Rcpp::wrap(__result));
    }
    UNPROTECT(1);
    return __sexp_result;
END_RCPP
}
// mp
CharacterVector mp(CharacterVector x, CharacterVector dict, CharacterVector user);
RcppExport SEXP jiebaR_mp(SEXP xSEXP, SEXP dictSEXP, SEXP userSEXP) {
BEGIN_RCPP
    SEXP __sexp_result;
    {
        Rcpp::RNGScope __rngScope;
        Rcpp::traits::input_parameter< CharacterVector >::type x(xSEXP );
        Rcpp::traits::input_parameter< CharacterVector >::type dict(dictSEXP );
        Rcpp::traits::input_parameter< CharacterVector >::type user(userSEXP );
        CharacterVector __result = mp(x, dict, user);
        PROTECT(__sexp_result = Rcpp::wrap(__result));
    }
    UNPROTECT(1);
    return __sexp_result;
END_RCPP
}
// taggerc
CharacterVector taggerc(CharacterVector x, CharacterVector dict, CharacterVector model, CharacterVector user);
RcppExport SEXP jiebaR_taggerc(SEXP xSEXP, SEXP dictSEXP, SEXP modelSEXP, SEXP userSEXP) {
BEGIN_RCPP
    SEXP __sexp_result;
    {
        Rcpp::RNGScope __rngScope;
        Rcpp::traits::input_parameter< CharacterVector >::type x(xSEXP );
        Rcpp::traits::input_parameter< CharacterVector >::type dict(dictSEXP );
        Rcpp::traits::input_parameter< CharacterVector >::type model(modelSEXP );
        Rcpp::traits::input_parameter< CharacterVector >::type user(userSEXP );
        CharacterVector __result = taggerc(x, dict, model, user);
        PROTECT(__sexp_result = Rcpp::wrap(__result));
    }
    UNPROTECT(1);
    return __sexp_result;
END_RCPP
}
// keywordsc
CharacterVector keywordsc(CharacterVector x, CharacterVector dict, CharacterVector model, unsigned int n);
RcppExport SEXP jiebaR_keywordsc(SEXP xSEXP, SEXP dictSEXP, SEXP modelSEXP, SEXP nSEXP) {
BEGIN_RCPP
    SEXP __sexp_result;
    {
        Rcpp::RNGScope __rngScope;
        Rcpp::traits::input_parameter< CharacterVector >::type x(xSEXP );
        Rcpp::traits::input_parameter< CharacterVector >::type dict(dictSEXP );
        Rcpp::traits::input_parameter< CharacterVector >::type model(modelSEXP );
        Rcpp::traits::input_parameter< unsigned int >::type n(nSEXP );
        CharacterVector __result = keywordsc(x, dict, model, n);
        PROTECT(__sexp_result = Rcpp::wrap(__result));
    }
    UNPROTECT(1);
    return __sexp_result;
END_RCPP
}
// keywordsweightc
CharacterVector keywordsweightc(CharacterVector x, CharacterVector dict, CharacterVector model, unsigned int n);
RcppExport SEXP jiebaR_keywordsweightc(SEXP xSEXP, SEXP dictSEXP, SEXP modelSEXP, SEXP nSEXP) {
BEGIN_RCPP
    SEXP __sexp_result;
    {
        Rcpp::RNGScope __rngScope;
        Rcpp::traits::input_parameter< CharacterVector >::type x(xSEXP );
        Rcpp::traits::input_parameter< CharacterVector >::type dict(dictSEXP );
        Rcpp::traits::input_parameter< CharacterVector >::type model(modelSEXP );
        Rcpp::traits::input_parameter< unsigned int >::type n(nSEXP );
        CharacterVector __result = keywordsweightc(x, dict, model, n);
        PROTECT(__sexp_result = Rcpp::wrap(__result));
    }
    UNPROTECT(1);
    return __sexp_result;
END_RCPP
}
// query
CharacterVector query(CharacterVector x, CharacterVector dict, CharacterVector model, int n);
RcppExport SEXP jiebaR_query(SEXP xSEXP, SEXP dictSEXP, SEXP modelSEXP, SEXP nSEXP) {
BEGIN_RCPP
    SEXP __sexp_result;
    {
        Rcpp::RNGScope __rngScope;
        Rcpp::traits::input_parameter< CharacterVector >::type x(xSEXP );
        Rcpp::traits::input_parameter< CharacterVector >::type dict(dictSEXP );
        Rcpp::traits::input_parameter< CharacterVector >::type model(modelSEXP );
        Rcpp::traits::input_parameter< int >::type n(nSEXP );
        CharacterVector __result = query(x, dict, model, n);
        PROTECT(__sexp_result = Rcpp::wrap(__result));
    }
    UNPROTECT(1);
    return __sexp_result;
END_RCPP
}
